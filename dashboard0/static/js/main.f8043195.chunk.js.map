{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","utils/getInitials.js","views/customer/CustomerListView/Results.js","views/customer/CustomerListView/Toolbar.js","views/customer/CustomerListView/data.js","views/customer/CustomerListView/index.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","icons/Facebook.js","icons/Google.js","views/auth/LoginView.js","views/errors/NotFoundView.js","services/TMDB/MovieRequest.js","views/product/MovieListView/Toolbar.js","views/product/MovieListView/MovieCard.js","views/product/MovieListView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/product/MoviePageView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","user","items","MovieIcon","BarChartIcon","UsersIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","root","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","IconButton","Badge","badgeContent","length","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","option","minHeight","Account","Container","maxWidth","lg","replace","split","slice","v","toUpperCase","join","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","id","TableBody","hover","selected","selectedIndex","concat","handleSelectOne","avatarUrl","getInitials","address","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","Toolbar","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","uuid","street","CustomerListView","data","red","differenceIcon","differenceValue","Budget","justify","amount","status","actions","LatestOrders","orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","Chip","endIcon","imageUrl","updatedAt","subtract","image","LatestProducts","products","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","orange","TasksProgress","LinearProgress","green","TotalCustomers","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","style","Dashboard","sm","xl","Facebook","d","Google","LoginView","navigate","useNavigate","initialValues","password","validationSchema","Yup","shape","max","onSubmit","errors","handleBlur","handleSubmit","isSubmitting","touched","mb","startIcon","align","error","onBlur","my","disabled","Link","marginTop","NotFoundView","API_KEY","TMDB","movieId","endPoint","moviesSelectionsLabels","React","setSelected","Stack","selection","onSelectMovies","handleClick","statsItem","statsIcon","MovieCard","movie","rating","setRating","poster_path","overview","vote_average","Rating","newValue","precision","movieCard","MovieList","movies","moviesSelect","isLoaded","totalPages","handlePageChange","bind","handleMoviesSelect","request","setState","fetch","then","res","json","result","results","total_pages","Backdrop","sx","zIndex","drawer","CircularProgress","Pagination","Component","RegisterView","policy","oneOf","ml","underline","FormHelperText","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","BANNER_BASE_URL","MoviePage","requestData","Promise","all","responses","response","movieDetails","credits","recommendations","catch","URLSearchParams","search","get","genres","undefined","genre","fiveCasts","cast","fiveRecommendations","original_title","CardMedia","backdrop_path","homepage","member","profile_path","character","routes","path","element","AccountView","DashboardView","MovieListView","App","routing","useRoutes","ThemeProvider","document","getElementById","createRoot","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8043195.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  // AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  // ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n  Video as MovieIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/baotran.jpg',\r\n  jobTitle: 'Senior Software Engineer at 3M',\r\n  name: 'Bao Tran'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/movies',\r\n    icon: MovieIcon,\r\n    title: 'Movies'\r\n  },\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/customers',\r\n    icon: UsersIcon,\r\n    title: 'Customers'\r\n  },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: '/app/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'Login'\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'Register'\r\n  },\r\n  // {\r\n  //   href: '/404',\r\n  //   icon: AlertCircleIcon,\r\n  //   title: 'Error'\r\n  // }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src=\"/static/logo.svg\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Phone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Registration date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button className={classes.importButton}>\r\n          Import\r\n        </Button>\r\n        <Button className={classes.exportButton}>\r\n          Export\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add customer\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search customer\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const [customers] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customers\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3}>\r\n          <Results customers={customers} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Order Ref\r\n                </TableCell>\r\n                <TableCell>\r\n                  Customer\r\n                </TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                  key={order.id}\r\n                >\r\n                  <TableCell>\r\n                    {order.ref}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {order.customer.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      color=\"primary\"\r\n                      label={order.status}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem\r\n            divider={i < products.length - 1}\r\n            key={product.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              size=\"small\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Facebook = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Facebook;\r\n","import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Google = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FacebookIcon from 'src/icons/Facebook';\r\nimport GoogleIcon from 'src/icons/Google';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: 'demo@devias.io',\r\n              password: 'Password123'\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in on the internal platform\r\n                  </Typography>\r\n                </Box>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  mt={3}\r\n                  mb={1}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    or login with email address\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const API_KEY = '4c40b76e885cbdd0161087ef43a8fce5';\r\nexport const TMDB = (movieId, endPoint) => {\r\n  return `https://api.themoviedb.org/3/movie/${movieId}${endPoint}?api_key=${API_KEY}&language=en-US`;\r\n};\r\n","/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst Toolbar = (props) => {\r\n  const moviesSelectionsLabels = ['Now Playing', 'Popular', 'Top Rated', 'Upcoming'];\r\n  const moviesSelections = ['now_playing', 'popular', 'top_rated', 'upcoming'];\r\n\r\n  const [selected, setSelected] = React.useState(0);\r\n\r\n  const handleClick = (value, index) => {\r\n    props.onSelectMovies(value);\r\n    setSelected(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box>\r\n              <Stack direction=\"row\" spacing={1}>\r\n                {moviesSelections.map((selection, index) => (\r\n                  <Chip\r\n                    key={selection}\r\n                    label={moviesSelectionsLabels[index]} \r\n                    variant={selected === index ? 'filled' : 'outlined'}\r\n                    color=\"primary\"\r\n                    onClick={() => { handleClick(selection, index); }} \r\n                  />\r\n                ))}\r\n              </Stack>\r\n              <Box mt={3} maxWidth={500}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SvgIcon\r\n                          fontSize=\"small\"\r\n                          color=\"action\"\r\n                        >\r\n                          <SearchIcon />\r\n                        </SvgIcon>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  size=\"small\"\r\n                  placeholder=\"Search movie\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  onSelectMovies: PropTypes.func\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Rating from '@mui/material/Rating';\r\nimport Stars from '@material-ui/icons/Stars';\r\nimport Typography from '@mui/material/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst POSTER_BASE_URL = 'https://image.tmdb.org/t/p/w300';\r\n\r\nconst MovieCard = ({ className, product: movie, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [rating, setRating] = React.useState(0);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mb={3}\r\n        >\r\n          <NavLink to={`/app/movie?id=${movie.id}`}>\r\n            <img\r\n              alt=\"movie\"\r\n              src={POSTER_BASE_URL + movie.poster_path}\r\n              variant=\"square\"\r\n            />\r\n          </NavLink>\r\n        </Box>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h5\"\r\n        >\r\n          {movie.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"body2\"\r\n        >\r\n          {movie.overview}\r\n        </Typography>\r\n      </CardContent>\r\n      <Box flexGrow={1} />\r\n      <Divider />\r\n      <Box p={2}>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={1}\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <Stars\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {movie.vote_average}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <Rating\r\n              name=\"simple-controlled\"\r\n              value={rating}\r\n              onChange={(event, newValue) => {\r\n                setRating(newValue);\r\n              }}\r\n              precision={0.5}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/no-unused-state */\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { API_KEY } from 'src/services/TMDB/MovieRequest';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Page from 'src/components/Page';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Toolbar from './Toolbar';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  movieCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nclass MovieList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: [],\r\n      moviesSelect: 'now_playing',\r\n      isLoaded: false,\r\n      error: null,\r\n      page: 1,\r\n      totalPages: 1\r\n    };\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handleMoviesSelect = this.handleMoviesSelect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { page, moviesSelect } = this.state;\r\n\r\n    this.request(page, moviesSelect);\r\n  }\r\n\r\n  request(page, moviesSelect) {\r\n    this.setState({\r\n      isLoaded: false\r\n    });\r\n    fetch(`https://api.themoviedb.org/3/movie/${moviesSelect}?api_key=${API_KEY}&language=en-US&page=${page}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: result.results,\r\n            totalPages: result.total_pages,\r\n            error: null\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState({\r\n      page: value,\r\n    });\r\n    this.request(value, this.state.moviesSelect);\r\n  }\r\n\r\n  handleMoviesSelect(value) {\r\n    this.setState({\r\n      moviesSelect: value,\r\n      page: 1,\r\n    });\r\n    this.request(this.state.page, value);\r\n  }\r\n\r\n  render() {\r\n    // eslint-disable-next-line object-curly-newline\r\n    const { movies, page, totalPages, isLoaded } = this.state;\r\n    const classes = useStyles;\r\n    return (\r\n      <Page\r\n        className={classes.root}\r\n        title=\"Movies\"\r\n      >\r\n        <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={!isLoaded}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <Container maxWidth={false}>\r\n          <Toolbar onSelectMovies={this.handleMoviesSelect} />\r\n          <Box\r\n            mt={3}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Pagination\r\n              color=\"primary\"\r\n              count={totalPages}\r\n              size=\"large\"\r\n              page={page}\r\n              onChange={this.handlePageChange}\r\n            />\r\n          </Box>\r\n          <Box mt={3}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n            >\r\n              {movies.map((movie) => (\r\n                <Grid\r\n                  item\r\n                  key={movie.id}\r\n                  lg={3}\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <MovieCard\r\n                    className={classes.movieCard}\r\n                    product={movie}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n          <Box\r\n            mt={3}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Pagination\r\n              color=\"primary\"\r\n              count={totalPages}\r\n              size=\"large\"\r\n              page={page}\r\n              onChange={this.handlePageChange}\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Notifications from './Notifications';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Settings\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","/* eslint-disable react/no-unused-state */\r\nimport React from 'react';\r\nimport {\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { TMDB } from 'src/services/TMDB/MovieRequest';\r\nimport {\r\n  Button, Card, CardActions, CardContent, CardMedia, Backdrop, CircularProgress,\r\n  Typography, Stack, Link\r\n} from '@mui/material';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst BANNER_BASE_URL = 'https://image.tmdb.org/t/p/original';\r\n\r\nclass MoviePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movieDetails: [],\r\n      credits: [],\r\n      recommendations: [],\r\n      isLoaded: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const movieId = searchParams.get('id');\r\n    this.requestData(movieId);\r\n  }\r\n\r\n  requestData = (movieId) => {\r\n    this.setState({\r\n      isLoaded: false\r\n    });\r\n    Promise.all([\r\n      fetch(TMDB(movieId, '')),\r\n      fetch(TMDB(movieId, '/credits')),\r\n      fetch(TMDB(movieId, '/recommendations'))\r\n    ]).then((responses) => {\r\n      // Get a JSON object from each of the responses\r\n      return Promise.all(responses.map((response) => response.json()));\r\n    }).then(\r\n      (data) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error: null,\r\n          movieDetails: data[0],\r\n          credits: data[1],\r\n          recommendations: data[2]\r\n        });\r\n      }\r\n    ).catch(\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const classes = useStyles;\r\n    const {\r\n      movieDetails, credits, recommendations, isLoaded\r\n    } = this.state;\r\n\r\n    let genres = '';\r\n    if (movieDetails.genres !== undefined) {\r\n      genres = movieDetails.genres.map((genre) => genre.name).join(' | ');\r\n    }\r\n\r\n    let fiveCasts = [];\r\n    if (credits.cast !== undefined) {\r\n      fiveCasts = credits.cast.slice(0, 5);\r\n    }\r\n\r\n    let fiveRecommendations = [];\r\n    if (recommendations.results !== undefined) {\r\n      fiveRecommendations = recommendations.results.slice(0, 5);\r\n    }\r\n    return (\r\n      <Page\r\n        className={classes.root}\r\n        title={movieDetails.original_title}\r\n      >\r\n        <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={!isLoaded}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <Container id=\"movie-page\">\r\n          <Card>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={BANNER_BASE_URL + movieDetails.backdrop_path}\r\n              alt=\"movie banner\"\r\n            />\r\n            <CardContent>\r\n              <Typography\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h4\"\r\n              >\r\n                {movieDetails.original_title}\r\n              </Typography>\r\n              <Typography\r\n                align=\"right\"\r\n                gutterBottom\r\n                variant=\"overline\"\r\n              >\r\n                {genres}\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"body1\"\r\n              >\r\n                {movieDetails.overview}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\" href={movieDetails.homepage}>Official Website</Button>\r\n            </CardActions>\r\n          </Card>\r\n\r\n          <Stack direction=\"row\" spacing={2} mt={3}>\r\n            <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h5\"\r\n            >\r\n              Top Casts\r\n            </Typography>\r\n            {fiveCasts.map((member) => (\r\n              <Card key={member.name} sx={{ width: '20%' }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  image={BANNER_BASE_URL + member.profile_path}\r\n                  alt=\"Profiler\"\r\n                />\r\n                <CardContent>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    {`${member.name} as ${member.character}`}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Stack>\r\n\r\n          <Stack direction=\"row\" spacing={2} mt={3}>\r\n            <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h5\"\r\n            >\r\n              Recommendations\r\n            </Typography>\r\n            {fiveRecommendations.map((movie) => (\r\n              <Card key={movie.title} sx={{ width: '20%' }}>\r\n                <Link href={`/app/movie?id=${movie.id}`} underline=\"none\">\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    image={BANNER_BASE_URL + movie.poster_path}\r\n                    alt=\"Profiler\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textSecondary\"\r\n                      variant=\"body1\"\r\n                    >\r\n                      {movie.title}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Link>\r\n              </Card>\r\n            ))}\r\n          </Stack>\r\n        </Container>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport CustomerListView from 'src/views/customer/CustomerListView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport MovieListView from 'src/views/product/MovieListView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\nimport MoviePage from './views/product/MoviePageView';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'customers', element: <CustomerListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'movies', element: <MovieListView /> },\r\n      { path: 'movie', element: <MoviePage /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <Navigate to=\"/app/movies\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n  <BrowserRouter basename=\"/dashboard\">\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}